name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./mijnmotorparkeren
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'mijnmotorparkeren/package-lock.json'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Run linter
      run: npm run lint
    
    - name: Run type check
      run: npm run type-check
    
    #- name: Validate data files
    #  run: npm run validate:data
    
    #- name: Run tests
    #  run: npm test
    
    #- name: Generate gemeente data and search index
    #  run: |
    #    npm run generate:boundaries
    #    npm run build:search-index
    
    - name: Copy .env.example to .env
      run: cp .env.example .env
    
    - name: Build
      run: npm run build

    - name: Generate sitemap
      run: node scripts/generate-sitemap.js
    
    # Upload build artifacts for the deploy job
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: mijnmotorparkeren/dist/

    - name: Upload data files
      uses: actions/upload-artifact@v4
      with:
        name: data-files
        path: mijnmotorparkeren/data/

  # New job to build and push Docker image
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: mijnmotorparkeren/dist/
    
    - name: Download data files
      uses: actions/download-artifact@v4
      with:
        name: data-files
        path: mijnmotorparkeren/data/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./mijnmotorparkeren
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max