# Basic security headers
add_header X-Frame-Options "SAMEORIGIN" always;
add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Hide nginx version
server_tokens off;

# Rate limiting zone for data endpoint
limit_req_zone $binary_remote_addr zone=data_limit:10m rate=10r/m;

server {
    listen 80;
    server_name mijnmotorparkeren.nl www.mijnmotorparkeren.nl;
    root /usr/share/nginx/html;
    index index.html;
    
    # Security headers for all requests
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:;" always;
    
    # Main application routes
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Protected data endpoint
    location /data/ {
        # Rate limiting
        limit_req zone=data_limit burst=5 nodelay;
        
        # Only allow requests with your domain as referrer
        if ($http_referer !~* "^https://mijnmotorparkeren\.nl") {
            return 403;
        }
        
        # Additional security headers for data
        add_header X-Robots-Tag "noindex, nofollow" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        
        # CORS headers (still useful for legitimate browser requests)
        add_header Access-Control-Allow-Origin "https://mijnmotorparkeren.nl" always;
        add_header Access-Control-Allow-Methods "GET" always;
        add_header Access-Control-Allow-Headers "Content-Type" always;
    }
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
    }
    
    location ~ \.(env|log|config)$ {
        deny all;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
}